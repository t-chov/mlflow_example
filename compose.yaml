services:
  # jupyter lab
  jupyterlab:
    build: ./jupyterlab
    environment:
      MLFLOW_TRACKING_URI: http://mlflow:5000
      GIT_PYTHON_REFRESH : "quiet"
    command:
      - start-notebook.sh
      - --NotebookApp.token='' # 認証を無効化
      - --NotebookApp.disable_check_xsrf=True # CSRFチェックを無効化
    volumes:
      - ./notebooks:/home/jovyan/notebooks:z
    ports:
      - "8888:8888"
  # PostgreSQL database
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mlflowdb
    expose:
      - "5432"
    ports:
      - "5432:5432"
  # MinIO server
  minio:
    image: minio/minio
    expose:
      - "9000"
    ports:
      - "9000:9000"
      # MinIO Console is available at http://localhost:9001
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: "minio_user"
      MINIO_ROOT_PASSWORD: "minio_password"
    healthcheck:
      test: timeout 5s bash -c ':> /dev/tcp/127.0.0.1/9000' || exit 1
      interval: 1s
      timeout: 10s
      retries: 5
    command: server /data --console-address ":9001"
  # Create a bucket named "bucket" if it doesn't exist
  minio-create-bucket:
    image: minio/mc
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      bash -c "
      mc alias set minio http://minio:9000 minio_user minio_password &&
      if ! mc ls minio | grep --quiet bucket; then
        mc mb minio/bucket
      else
        echo 'bucket already exists'
      fi
      "
  # mlflow
  artifacts-server:
    build: ./mlflow
    depends_on:
      - minio-create-bucket
    expose:
      - "5500"
    ports:
      - "5500:5500"
    environment:
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
      AWS_ACCESS_KEY_ID: "minio_user"
      AWS_SECRET_ACCESS_KEY: "minio_password"
    command: >
      mlflow server
      --host 0.0.0.0
      --port 5500
      --artifacts-destination s3://bucket
      --gunicorn-opts "--log-level debug"
      --artifacts-only
  mlflow:
    build: ./mlflow
    depends_on:
      - postgres
      - artifacts-server
    expose:
      - "5000"
    ports:
      - "5000:5000"
    command: >
      mlflow server
      --host 0.0.0.0
      --port 5000
      --backend-store-uri postgresql://user:password@postgres:5432/mlflowdb
      --default-artifact-root http://artifacts-server:5500/api/2.0/mlflow-artifacts/artifacts/experiments
      --gunicorn-opts "--log-level debug"
volumes:
  minio-data:
  db-data:
